[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py","pyi","py3","pyw",".pythonstartup",".pythonrc"]
shebangs = ["python"]
roots = [".", "pyproject.toml", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["pyright", "ruff"]
indent = { tab-width = 4, unit = "    " }
auto-format = true

[language.formatter]
command = "sh"
args = ["-c", "ruff check --fix - | ruff format -"]

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.pyright.config]
reportMissingTypeStubs = false

[language-server.pyright.config.python.analysis]
typeCheckingMode = "basic"

[language-server.ruff]
# command = "ruff-lsp"
command = "ruff server"

[language-server.ruff.config]
settings = {args = []}


[[language]]
name = "robot"
scope = "source.robot"
injection-regex = "robot"
file-types = ["robot", "resource"]
comment-token = "#"
indent = { tab-width = 4, unit = " " }
language-servers = [ "robotcode" ]

[language-server.robotcode]
command = "robotcode"
args = ["language-server"]


[[language]]
name = "markdown"
scope = "source.md"
injection-regex = "md|markdown"
file-types = ["md", "livemd", "markdown", "mdx", "mkd", "mkdn", "mdwn", "mdown", "markdn", "mdtxt", "mdtext", "workbook", { glob = "PULLREQ_EDITMSG" }]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
indent = { tab-width = 2, unit = "  " }
block-comment-tokens = { start = "<!--", end = "-->" }

[language.formatter]
command = "bash"
args = ["-c", "pandoc -f markdown -t gfm"]
